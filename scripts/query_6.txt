
-- (дополнительно) добавим primary key с индексом для всех таблиц по id

ALTER TABLE orders ADD PRIMARY KEY (id);
create INDEX ON orders(id);
ALTER TABLE categories ADD PRIMARY KEY (id);
create INDEX ON categories(id);
ALTER TABLE clients ADD PRIMARY KEY (id);
create INDEX ON clients(id);
ALTER TABLE companies ADD PRIMARY KEY (id);
create INDEX ON companies(id);
ALTER TABLE countries ADD PRIMARY KEY (id);
create INDEX ON countries(id);
ALTER TABLE goods ADD PRIMARY KEY (id);
create INDEX ON goods(id);
ALTER TABLE payment_methods ADD PRIMARY KEY (id);
create INDEX ON payment_methods(id);
ALTER TABLE sale_types ADD PRIMARY KEY (id);
create INDEX ON sale_types(id);



*************
* 6 запрос: *
*************
Для указанного месяца (заданного номером месяца) получить список всех продаж, каж-дая из которых совершена за безналичный расчёт на сумму не менее 1000.
Для каждой продажи должны быть указаны: дата, категория товара, модель, сумма про-дажи (название фирмы и тип поставки указывать не надо).
Отсортировать список следующим образом: дата, категория, модель.
Ограничение на максимальное время выполнения запроса:
? в приложении – 530 мс;
? используя explain analyze – 375 мс.
-------------------------------------------------------------------------------------------------------------------------------------------------------

(1 вариант)


-- 1) Таблица безналичных покупок "orders_non_cash" перенесена с сервера A на сервер B

-- добавить столбец "месяц" + по нему индекс
 
SET search_path TO initial;

alter table orders add column on_sale_month integer;
update orders 
  set on_sale_month = date_part('month', on_sale_date);
create index on orders (on_sale_month);

-- создадим таблицу "orders_non_cash" (сервер B)

drop table if exists orders_non_cash;

create table orders_non_cash as(
	select *
	from orders
	where orders.payment_method_id = 1
);

ALTER TABLE orders_non_cash ADD PRIMARY KEY (id);
ALTER TABLE orders_non_cash ADD FOREIGN KEY (goods_id) REFERENCES goods(id);

ALTER TABLE orders_non_cash ADD FOREIGN KEY (payment_method_id) REFERENCES payment_methods(id);
ALTER TABLE orders_non_cash ADD FOREIGN KEY (sale_type_id) REFERENCES sale_types(id);

create INDEX ON orders_non_cash(id);
create INDEX ON orders_non_cash(on_sale_date);
create INDEX ON orders_non_cash(on_sale_month);
create INDEX ON orders_non_cash(goods_id);
create INDEX ON orders_non_cash(client_id);


-- 2) Перенесем таблицу Categories на сервер B


-- 3) Перенесем таблицу Goods на сервер B

ALTER TABLE goods ADD FOREIGN KEY (category_id) REFERENCES categories(id);
ALTER TABLE goods ADD FOREIGN KEY (company_id) REFERENCES companies(id);

create INDEX ON goods(id);
create INDEX ON goods(category_id);
create INDEX ON goods(company_id);



-- 4) напишем запрос на выборку

select orders_non_cash.on_sale_date, categories.title, goods.model, orders_non_cash.sale_amount
from orders_non_cash
join goods on orders_non_cash.goods_id = goods.id
join categories on goods.category_id = categories.id
where orders_non_cash.sale_amount >= 1000 and on_sale_month = 1
order by orders_non_cash.on_sale_date, categories.title, goods.model;

"Sort  (cost=10579.41..10615.51 rows=14437 width=43) (actual time=251.264..276.565 rows=14356 loops=1)"
"  Sort Key: orders_non_cash.on_sale_date, categories.title, goods.model"
"  Sort Method: external merge  Disk: 776kB"
"  ->  Hash Join  (cost=1557.36..9582.00 rows=14437 width=43) (actual time=26.370..135.890 rows=14356 loops=1)"
"        Hash Cond: (goods.category_id = categories.id)"
"        ->  Hash Join  (cost=1546.89..9373.02 rows=14437 width=19) (actual time=25.675..105.813 rows=14356 loops=1)"
"              Hash Cond: (orders_non_cash.goods_id = goods.id)"
"              ->  Bitmap Heap Scan on orders_non_cash  (cost=400.13..7865.34 rows=14437 width=13) (actual time=4.858..40.042 rows=14356 loops=1)"
"                    Recheck Cond: (on_sale_month = 1)"
"                    Filter: (sale_amount >= 1000::numeric)"
"                    Rows Removed by Filter: 6879"
"                    ->  Bitmap Index Scan on orders_non_cash_on_sale_month_idx  (cost=0.00..396.52 rows=21347 width=0) (actual time=3.461..3.461 rows=21235 loops=1)"
"                          Index Cond: (on_sale_month = 1)"
"              ->  Hash  (cost=1019.67..1019.67 rows=10167 width=14) (actual time=20.781..20.781 rows=10167 loops=1)"
"                    Buckets: 1024  Batches: 1  Memory Usage: 472kB"
"                    ->  Seq Scan on goods  (cost=0.00..1019.67 rows=10167 width=14) (actual time=0.090..10.705 rows=10167 loops=1)"
"        ->  Hash  (cost=6.32..6.32 rows=332 width=32) (actual time=0.678..0.678 rows=332 loops=1)"
"              Buckets: 1024  Batches: 1  Memory Usage: 22kB"
"              ->  Seq Scan on categories  (cost=0.00..6.32 rows=332 width=32) (actual time=0.008..0.295 rows=332 loops=1)"

------------
-- 276 мс --
------------

