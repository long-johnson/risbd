*************
* 5 запрос: *
*************
Получить список всех категорий товаров.
Для каждой категории отобразить её название и суммарную выручку от продажи товаров из этой категории за заданный (номером) месяц за наличный расчёт 
(те категории, у которых не будет товаров, проданных при заданных условиях, включить в начало списка).
Отсортировать список по убыванию суммарной выручки.
Ограничение на максимальное время выполнения запроса:
? в приложении – 10 мс;
? используя explain analyze – 6 мс.
-------------------------------------------------------------------------------------



(1 вариант)

-- наивный запрос

select categories.title, A.sum_sale_amount
from categories
left join 
(
	select goods.category_id, sum(orders_cash.sale_amount) as sum_sale_amount
	from goods
	join orders_cash on goods.id = orders_cash.goods_id
	where orders_cash.on_sale_month = 1
	group by goods.category_id
) as A
on categories.id = A.category_id
order by A.sum_sale_amount desc

"Sort  (cost=9643.43..9644.26 rows=332 width=60) (actual time=270.102..270.540 rows=332 loops=1)"
"  Sort Key: (sum(orders_cash.sale_amount))"
"  Sort Method: quicksort  Memory: 54kB"
"  ->  Hash Right Join  (cost=9618.32..9629.52 rows=332 width=60) (actual time=267.761..269.294 rows=332 loops=1)"
"        Hash Cond: (goods.category_id = categories.id)"
"        ->  HashAggregate  (cost=9607.85..9611.17 rows=332 width=9) (actual time=266.059..266.567 rows=332 loops=1)"
"              ->  Hash Join  (cost=1553.69..9500.42 rows=21486 width=9) (actual time=58.112..206.873 rows=21424 loops=1)"
"                    Hash Cond: (orders_cash.goods_id = goods.id)"
"                    ->  Bitmap Heap Scan on orders_cash  (cost=406.94..7816.51 rows=21486 width=9) (actual time=5.146..61.065 rows=21424 loops=1)"
"                          Recheck Cond: (on_sale_month = 1)"
"                          ->  Bitmap Index Scan on fki_orders_cash_on_sale_month  (cost=0.00..401.56 rows=21486 width=0) (actual time=3.679..3.679 rows=21424 loops=1)"
"                                Index Cond: (on_sale_month = 1)"
"                    ->  Hash  (cost=1019.67..1019.67 rows=10167 width=8) (actual time=52.938..52.938 rows=10167 loops=1)"
"                          Buckets: 1024  Batches: 1  Memory Usage: 398kB"
"                          ->  Seq Scan on goods  (cost=0.00..1019.67 rows=10167 width=8) (actual time=0.082..27.109 rows=10167 loops=1)"
"        ->  Hash  (cost=6.32..6.32 rows=332 width=32) (actual time=1.677..1.677 rows=332 loops=1)"
"              Buckets: 1024  Batches: 1  Memory Usage: 22kB"
"              ->  Seq Scan on categories  (cost=0.00..6.32 rows=332 width=32) (actual time=0.012..0.846 rows=332 loops=1)"
"Total runtime: 271.062 ms"

------------
-- 270 мс --
------------






(2 вариант)  

-- создадим таблицу: сategories_month_sum_sale_amount_cash
-- со столбцами: id, category_id, on_sale_month, sum_sale_amount
-- т.е. соответствие: категория, месяц -> сумма покупок товаров из данной за наличный расчет категории за данный месяц

drop table if exists сategories_month_sum_sale_amount_cash;

create table сategories_month_sum_sale_amount_cash as
(
	select goods.category_id, orders_cash.on_sale_month,  sum(orders_cash.sale_amount) as sum_sale_amount
	from orders_cash
	join goods on goods.id = orders_cash.goods_id
	group by goods.category_id, orders_cash.on_sale_month
	order by category_id, on_sale_month
);

alter table сategories_month_sum_sale_amount_cash add id serial;
ALTER TABLE сategories_month_sum_sale_amount_cash ADD PRIMARY KEY (id);
ALTER TABLE сategories_month_sum_sale_amount_cash ADD FOREIGN KEY (category_id) REFERENCES categories(id);
create INDEX fki_сategories_month_sum_sale_amount_cash_id
   ON сategories_month_sum_sale_amount_cash(id);
create INDEX fki_сategories_month_sum_sale_amount_cash_category_id
   ON сategories_month_sum_sale_amount_cash(category_id);
create INDEX fki_сategories_month_sum_sale_amount_cash_on_sale_month
   ON сategories_month_sum_sale_amount_cash(on_sale_month);
   
-- запрос

select categories.title, сategories_month_sum_sale_amount_cash.sum_sale_amount
from categories
left join сategories_month_sum_sale_amount_cash on categories.id = сategories_month_sum_sale_amount_cash.category_id
where on_sale_month = 1
order by sum_sale_amount desc

"Sort  (cost=69.94..70.77 rows=332 width=35) (actual time=5.181..5.814 rows=332 loops=1)"
"  Sort Key: "сategories_month_sum_sale_amount_cash".sum_sale_amount"
"  Sort Method: quicksort  Memory: 54kB"
"  ->  Hash Join  (cost=21.32..56.04 rows=332 width=35) (actual time=1.625..3.893 rows=332 loops=1)"
"        Hash Cond: ("сategories_month_sum_sale_amount_cash".category_id = categories.id)"
"        ->  Bitmap Heap Scan on "сategories_month_sum_sale_amount_cash"  (cost=10.85..41.00 rows=332 width=11) (actual time=0.063..0.832 rows=332 loops=1)"
"              Recheck Cond: (on_sale_month = 1)"
"              ->  Bitmap Index Scan on "fki_сategories_month_sum_sale_amount_cash_on_sale_month"  (cost=0.00..10.77 rows=332 width=0) (actual time=0.049..0.049 rows=332 loops=1)"
"                    Index Cond: (on_sale_month = 1)"
"        ->  Hash  (cost=6.32..6.32 rows=332 width=32) (actual time=1.542..1.542 rows=332 loops=1)"
"              Buckets: 1024  Batches: 1  Memory Usage: 22kB"
"              ->  Seq Scan on categories  (cost=0.00..6.32 rows=332 width=32) (actual time=0.009..0.742 rows=332 loops=1)"

------------
-- 5.8 мс --
------------
